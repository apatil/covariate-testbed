#!/usr/bin/python

# Author: Anand Patil
# Date: 6 Feb 2009
# License: Creative Commons BY-NC-SA
####################################

doc_str = """
How to use cov-test-infer

cov-test-infer input.csv iter thin ncpus dbname

- input.csv: A csv file whose column names are lat, lon, t, pos, neg and the names of any covariates used.
- iter: The number of MCMC iterations to use.
- thin: The interval at which samples should be kept (tallied).
- ncpus: The number of processors to be used.
- dbname: The filename to use for the trace.

NOTE: Burnin samples are not discarded here, you can ignore them at the prediction stage.

Produces:
- dbname: An hdf5 archive containing the trace. You don't need to use this directly, but it is used by
  cov-test-predict.
- dbname_plots: A directory containing images (in pdf format) of the traces and histograms for each 
  variable in the model.
"""

import sys
import matplotlib
matplotlib.use('pdf')
matplotlib.interactive(False)


if len(sys.argv)!=6:
    print doc_str
    sys.exit()
if sys.argv[1] in ['-h','--help']:
    print doc_str
    sys.exit()

from cov_test import MCMC_obj
from pylab import csv2rec
import os
import numpy as np
import pymc as pm

# MCMC_obj(pos,neg,lon,lat,t,cv,cpus,dbname=None,**kwds)

def maybe_int(str, n):
    try:
        return int(str)
    except ValueError:
        print 'Error, failed to convert value %s given for argument %s to integer.'%(str,n)
        sys.exit()

input = sys.argv[1]
iter = maybe_int(sys.argv[2],'iter')
thin = maybe_int(sys.argv[3],'thin')
cpus = maybe_int(sys.argv[4],'cpus')
dbname = sys.argv[5]

if dbname in os.listdir('.'):
    print 'Error, database file %s already exists. Delete or move it, or change the dmname argument.'%dbname
    sys.exit()

input = csv2rec(input)

def maybe_convert(ra, field, dtype):
    arr = ra[field]
    try:
        return arr.astype(dtype)
    except:
        for i in xrange(len(arr)):
            try:
                np.array(arr[i],dtype=dtype)
            except:
                raise ValueError, 'Input column %s, element %i (starting from zero) is %s,\n which cannot be cast to %s'%(field,i,arr[i],dtype)
                
            

lon = maybe_convert(input,'lon','float')
lat = maybe_convert(input,'lat','float')
t = maybe_convert(input,'t','float')
pos = maybe_convert(input,'pos','int')
neg = maybe_convert(input,'neg','int')
        

cv = {}
for n in input.dtype.names:
    if n not in ['lon','lat','t','pos','neg']:
        cv[n]=maybe_convert(input, n, 'float')
        
M,S=MCMC_obj(pos,neg,lon,lat,t,cv,cpus,dbname)
M.isample(iter,0,thin)
os.mkdir(dbname+'_plots')
os.chdir(dbname+'_plots')
pm.Matplot.plot(M, format='pdf')
